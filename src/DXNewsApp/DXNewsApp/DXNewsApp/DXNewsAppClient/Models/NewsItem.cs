// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace DXNewsApp.Models
{
    public partial class NewsItem
    {
        private string _abstractVariable;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Abstract
        {
            get { return this._abstractVariable; }
            set { this._abstractVariable = value; }
        }
        
        private string _body;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Body
        {
            get { return this._body; }
            set { this._body = value; }
        }
        
        private string _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ID
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _imageUrl;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string ImageUrl
        {
            get { return this._imageUrl; }
            set { this._imageUrl = value; }
        }
        
        private string _title;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Title
        {
            get { return this._title; }
            set { this._title = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the NewsItem class.
        /// </summary>
        public NewsItem()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken abstractValue = inputObject["abstract"];
                if (abstractValue != null && abstractValue.Type != JTokenType.Null)
                {
                    this.Abstract = ((string)abstractValue);
                }
                JToken bodyValue = inputObject["body"];
                if (bodyValue != null && bodyValue.Type != JTokenType.Null)
                {
                    this.Body = ((string)bodyValue);
                }
                JToken idValue = inputObject["id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.ID = ((string)idValue);
                }
                JToken imageUrlValue = inputObject["imageUrl"];
                if (imageUrlValue != null && imageUrlValue.Type != JTokenType.Null)
                {
                    this.ImageUrl = ((string)imageUrlValue);
                }
                JToken titleValue = inputObject["title"];
                if (titleValue != null && titleValue.Type != JTokenType.Null)
                {
                    this.Title = ((string)titleValue);
                }
            }
        }
    }
}
